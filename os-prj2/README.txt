Λειτουργικά Συστήματα - 2η εργασία χειμερινού εξαμήνου 2020
Ονοματεπώνυμο: Στυλιανή Φραγκιαδάκη
ΑΜ: 1115201900205 (sdi1900205)

ΓΕΝΙΚΑ: Έχουν υλοποιηθεί όλα τα ζητούμενα της άσκησης σε C, με επαρκή σχολιασμό.


Έχω επιλέξει unnamed pipes για την επικοινωνία μεταξύ των διεργασιών.

Οι δομές δεδομένων που εχουν χρησιμοποιηθεί είναι πίνακες και λίστες. Η λίστα είναι generic
υλοποιημένη με void pointers, όπου την είχα φτιάξει στην πρώτη εργασία του μαθήματος.

Ο τρίτος αλγόριθμος εύρεσης πρώτων που επιλέχθηκε είναι μια παραλλαγή του κόσκινου του Ερατοσθένη, όπως διδάχθηκε από το μάθημα 
"Εισαγωγή στον Προγραμματισμό" του κ. Σταματόπουλου.

Σχετικά με τα αρχεία:

- read_write.c 
|
-> Εκεί υπάρχουν wrappers των system calls read & write, ωστε να εξασφαλίζεται οτι __όλα__ τα δεδομένα που θέλουμε να 
διαβάσουμε ή να γράψουμε αντίστοιχα (πρωτότυπα στο include.h)

- myprime.c
|
-> Το κύριο πρόγραμμα (πατέρας) που θα δημιουργήσει κατάλληλα όλα τα παιδιά εκτελέσιμα και του αναθέτει τα κατάλληλα υποδιαστήματα
όπου θα ψάξουν για πρώτους. Φτιάχνει τα unnamed pipes για κάθε παιδί, τα ίδια τα παιδιά και περνάει τα διαστήματα, 
το άκρο που γράφει το pipe και διάφορες άλλες πληροφορίες που χρειάζεται το παιδί (inner).
Αφού δημιουργήσει τα παιδιά αρχίζει να κάνει poll για να λάβει τα struct prime που του στέλνουν ένα-ένα τα παιδιά, και τα βάζει
μέσα σε μία λίστα. Τα τελευταία struct, με πεδιο number αρνητικό (pid * (-1)) εχουν το χρόνο του κάθε worker. Τέλος το τελευταίο
struct με number = 0, σηματοδοτεί ότι το παιδί δεν έχει άλλα αποτελέσματα να στείλει και η επικοινωνία τους σταματά.
Κατόπιν, τα περιεχόμενα των λιστών των αποτελεσμάτων ταξινομούνται με τη βοηθεια της qsort(), το ίδιο και οι workers με βάση το 
PID τους και εκτυπώνονται. Επίσης εκτυπώνεται ο min και max χρόνος που χρειάστηκε για να ολοκληρώσουν τη λειτουργία τους οι workers.
Απελευθερώνεται η μνήμη.

Όσον αφορά τη διαχείριση των σημάτων, έχω επιλέξει την sigaction και παίρνω περιπου το 60% - 70% των σημάτων που στέλνονται
από τους workers.


- inner.c
|
-> Ομοίως με το myprime δημιουργεί τα pipes και τα παιδιά και αναθέτει σε κάθε παιδί το κατάλληλο pipe και το διαστημα εκτέλεσης. 
Η χρήση της poll είναι σχεδον η ίδια. Ακόμη αναθέτει τον κατάλληλο αλγόριθμο εύρεσης πρώτων.
Πάλι στέλνει τα απότελεσματα κάθε worker ένα-ένα μέσω του pipe, αφού πρώτα τα σορτάρει.
\

- leaf.c
|
-> Ανάλογα με το όρισμα που έχει λάβει από τον πατέρα του (inner), καλεί τον κατάλληλο αλγόριθμο αναζήτησης. Αν βρεί κάποιον πρώτο στο
διάστημα που ψάχνει, τον γράφει στο pipe. Τέλος γράφει επίσης το χρόνο που χρειάστηκε για να ολοκληρωθεί η εκτέλεσή του. Στέλνει με την kill
to USR1 στη ρίζα.

Υπάρχουν αρκετά λεπτομερή σχόλια. Στα tests που έχω κάνει μου βγάζει σωστά αποτελέσματα. Επίσης παρέχεται και κατάλληλο Makefile για τη μεταγλώττιση.

(make all)
Καλή διόρθωση :D

